name: Docker Image CI/CD (Ray)
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual triggers
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install toml package
        run: pip install toml
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Extract version from pyproject.toml
        id: meta
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request' # Avoid pushing on PRs
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Ray Docker image (CPU)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.ray
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.version }}-ray-cpu
            ghcr.io/dvruette/easydel:latest-ray-cpu
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.date }}-ray-cpu
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            HARDWARE_TYPE=cpu
            RAY_IMAGE=rayproject/ray:2.36.0-py311

      - name: Build and push Ray Docker image (GPU)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.ray
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.version }}-ray-gpu
            ghcr.io/dvruette/easydel:latest-ray-gpu
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.date }}-ray-gpu
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            HARDWARE_TYPE=gpu
            RAY_IMAGE=rayproject/ray:2.36.0-py311-gpu

      - name: Build and push Ray Docker image (TPU)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.ray
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.version }}-ray-tpu
            ghcr.io/dvruette/easydel:latest-ray-tpu
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.date }}-ray-tpu
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            HARDWARE_TYPE=tpu
            RAY_IMAGE=rayproject/ray:2.36.0-py311
